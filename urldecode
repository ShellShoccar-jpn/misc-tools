#!/bin/sh

######################################################################
#
# URLDECODE - URL Decoder on the Basis of RFC 3986
#
# Usage   : urldecode <file> ...
# Args    : <file> ...... Text file for URL decoding
# Environs: LINE_BUFFERED
#             =yes ........ Line-buffered mode if possible
#             =forcible ... Line-buffered mode or exit if impossible
#
# Written by Shell-Shoccar Japan (@shellshoccarjpn) on 2022-02-08
#
# This is a public-domain software (CC0). It means that all of the
# people can use this for any purposes with no restrictions at all.
# By the way, We are fed up with the side effects which are brought
# about by the major licenses.
#
# The latest version is distributed at the following page.
# https://github.com/ShellShoccar-jpn/misc-tools
#
######################################################################


######################################################################
# Initial Configuration
######################################################################

# === Initialize shell environment ===================================
set -u
umask 0022
export LC_ALL=C
export PATH="$(command -p getconf PATH 2>/dev/null)${PATH+:}${PATH-}"
case $PATH in :*) PATH=${PATH#?};; esac
export UNIX_STD=2003  # to make HP-UX conform to POSIX

# === Define the functions for printing usage ========================
print_usage_and_exit() {
  cat <<-USAGE 1>&2
	Usage   : ${0##*/} <file> ...
	Args    : <file> ... Text file for URL decoding
	Version : 2022-02-08 19:55:27 JST
	          (POSIX Bourne Shell/POSIX commands)
	USAGE
  exit 1
}


######################################################################
# Parse Options
######################################################################

# === Print help message if required =================================
case "${1:-}" in
  --help|--version|-h) print_usage_and_exit;;
esac


######################################################################
# Switch to the line-buffered mode if required
######################################################################
awkfl=''
case "${LINE_BUFFERED:-}" in
             [Ff][Oo][Rr][Cc][EeIi]*|2) lbm=2;;
  [Tt][Rr][Uu][Ee]|[Yy][Ee][Ss]|[Yy]|1) lbm=1;;
                                     *) lbm=0;;
esac
case $lbm in [!0]*)
  s=$(awk -W interactive 'BEGIN{}' 2>&1)
  case "$?$s" in
  '0') alias awk='awk -W interactive';;
    *) awkfl='system("");'           ;;
  esac
;; esac


######################################################################
# Main
######################################################################

(cat ${1+"$@"}; echo '')                                             |
awk '                                                                #
BEGIN {                                                              #
  # --- prepare                                                      #
  OFS = "";                                                          #
  ORS = "";                                                          #
  # --- prepare decoding                                             #
  for (i=0; i<256; i++) {                                            #
    l  = sprintf("%c",i);                                            #
    k1 = sprintf("%02x",i);                                          #
    k2 = substr(k1,1,1) toupper(substr(k1,2,1));                     #
    k3 = toupper(substr(k1,1,1)) substr(k1,2,1);                     #
    k4 = toupper(k1);                                                #
    p2c[k1]=l;p2c[k2]=l;p2c[k3]=l;p2c[k4]=l;                         #
  }                                                                  #
  # --- decode                                                       #
  while (getline line) {                                             #
    gsub(/\+/, " ", line);                                           #
    while (length(line)) {                                           #
      if (match(line,/%[0-9A-Fa-f][0-9A-Fa-f]/)) {                   #
        print substr(line,1,RSTART-1), p2c[substr(line,RSTART+1,2)]; #
        line = substr(line,RSTART+RLENGTH);                          #
      } else {                                                       #
        print line;                                                  #
        break;                                                       #
      }                                                              #
    }                                                                #
    print "\n";'"$awkfl"'                                            #
  }                                                                  #
}'                                                                   |
awk '                                                                #
BEGIN{                                                               #
  ORS="";                                                            #
  OFS="";                                                            #
  getline line;                                                      #
  print line;                                                        #
  while (getline line) {                                             #
    print "\n",line;'"$awkfl"'                                       #
  }                                                                  #
}                                                                    #
'
