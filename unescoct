#!/bin/sh

######################################################################
#
# UNESCOCT - A Filter of Unescaping Escaped 3-Digit-Octal Numbers
#
# USAGE: unescoct [file...]
#
# Written by Shell-Shoccar Japan (@shellshoccarjpn) on 2020-05-06
#
# This is a public-domain software (CC0). It means that all of the
# people can use this for any purposes with no restrictions at all.
# By the way, We are fed up with the side effects which are brought
# about by the major licenses.
#
# The latest version is distributed at the following page.
# https://github.com/ShellShoccar-jpn/misc-tools
#
######################################################################


######################################################################
# Initial Configuration
######################################################################

# === Initialize shell environment ===================================
set -u
umask 0022
export LC_ALL=C
export PATH="$(command -p getconf PATH 2>/dev/null)${PATH+:}${PATH-}"
case $PATH in :*) PATH=${PATH#?};; esac
export UNIX_STD=2003  # to make HP-UX conform to POSIX

# === Define the functions for printing usage ========================
print_usage_and_exit () {
  cat <<-USAGE 1>&2
	Usage   : ${0##*/} <file> [file...]
	Version : 2020-05-06 22:42:19 JST
	USAGE
  exit 1
}


######################################################################
# Argument Parsing
######################################################################

# === Print usage and exit if one of the help options is set =========
case "$# ${1:-}" in
  '1 -h'|'1 --help'|'1 --version') print_usage_and_exit;;
esac


######################################################################
# Main
######################################################################

(cat ${1+"$@"}; echo '')                                        |
awk 'BEGIN {                                                    #
       OFS=""; ORS="";                                          #
       while (getline line) {                                   #
         while (1) {                                            #
           if (line=="") {print "\n"; break;}                   #
           if (match(line,/\\[0-9][0-9][0-9]/)) {               #
             print substr(line, 1, RSTART-1);                   #
             o=substr(line,RSTART+1,3);                         #
             n=substr(o,1,1)*64+substr(o,2,1)*8+substr(o,3,1);  #
             printf("%c",n);                                    #
             line=substr(line,RSTART+4);                        #
           } else {                                             #
             print line                                         #
             line="";                                           #
           }                                                    #
         }                                                      #
       }                                                        #
     }'                                                         |
awk 'BEGIN{                                                     #
       ORS=""; OFS="";                                          #
       getline line;                                            #
       print line;                                              #
       dlm=sprintf("\n");                                       #
       while (getline line) {                                   #
         print dlm,line;                                        #
       }                                                        #
     }'
